{"version":3,"sources":["services/persons.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","Notifications","message","errorMessage","className","Filter","props","value","filter","onChange","handleFilterChange","Personform","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","Person","person","deletePerson","name","number","onClick","Persons","persons","filteredP","map","key","App","useState","setPersons","setNewName","setNewNumber","setFilter","setFilteredP","setMessage","setErrorMessage","useEffect","console","log","personService","initialPersons","event","target","filtered","toLowerCase","includes","preventDefault","personObject","find","p","window","confirm","returnedPerson","setTimeout","catch","error","concat","deleted","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1d9fc96a.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = 'https://fierce-cove-92591.herokuapp.com/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst add = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst deletePerson = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, add, deletePerson, update}","import React, { useEffect, useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport personService from './services/persons'\nimport './index.css'\n\nconst Notifications = ({ message, errorMessage }) => {\n  if (message === '' && errorMessage === '') {\n    return null\n  } else if (message !== '') {\n    return <div className=\"notification\">{message}</div>\n  } else {\n    return <div className=\"error\">{errorMessage}</div>\n  }\n}\n\nconst Filter = (props) => <div>filter persons: <input value={props.filter} onChange={props.handleFilterChange}></input></div>\n\nconst Personform = (props) => {\n  return (\n    <form onSubmit={props.addPerson}>\n        <div> name: <input value={props.newName} onChange={props.handleNameChange}/></div>\n        <div> number: <input value={props.newNumber} onChange={props.handleNumberChange}/></div>\n        <div><button type=\"submit\">add</button></div>\n    </form>\n  )\n}\n\nconst Person = ({ person, deletePerson }) => <p>{person.name} {person.number} <button onClick={() => deletePerson(person)}>delete</button></p>\n\nconst Persons = ({ persons, filteredP, filter, deletePerson }) => {\n  if (filter === '') {\n    return (\n      persons.map(person => <Person key={person.name} person={person} deletePerson={deletePerson}/>)\n    )\n  } return ( \n      filteredP.map(person => <Person key={person.name} person={person} deletePerson={deletePerson}/>)\n    )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([]) \n  const [newName, setNewName] = useState('new name')\n  const [newNumber, setNewNumber] = useState('new number')\n  const [filter, setFilter] = useState('')\n  const [filteredP, setFilteredP] = useState(persons)\n  const [message, setMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('')\n\n  useEffect(() => {\n    console.log('effect')\n    personService\n      .getAll()\n        .then(initialPersons => {\n          console.log('promise fulfillled', initialPersons)\n          setPersons(initialPersons)\n      })\n  }, [])\n\n  const handleNameChange = (event) => setNewName(event.target.value)\n  \n  const handleNumberChange = (event) => setNewNumber(event.target.value)\n  \n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n    const filtered = persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n    console.log(filtered)\n    setFilteredP(filtered)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    \n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n    \n    const names = persons.map(person => person.name)\n    if (!names.includes(personObject.name)) {\n      personService\n        .add(personObject)\n          .then(returnedPerson => {\n            console.log(returnedPerson)\n            setPersons(persons.concat(returnedPerson))\n            setNewName('')\n            setNewNumber('')\n            setMessage(`${personObject.name} added to Phonebook`)\n            setTimeout(() => {\n              setMessage('')\n            }, 5000)\n          })     \n        .catch(error => {\n          console.log('fail')\n          setErrorMessage('Name or number missing')\n          setTimeout(() => {\n            setErrorMessage('')\n          }, 5000)\n        })\n    } else {\n      const person = persons.find(p => p.name === personObject.name)\n      const id = person.id\n      console.log('person', person)\n      window.confirm(`${personObject.name} is already added to phonebook, replace the old number with a new one?`)\n      ? personService\n          .update(id, personObject)\n            .then(returnedPerson => {\n              console.log('returned person', returnedPerson)\n              setPersons(persons.map(person => person.id !== id ? person : returnedPerson))\n              setNewName('')\n              setNewNumber('')\n              setMessage(`${personObject.name} updated`)\n              setTimeout(() => {\n              setMessage('')\n            }, 5000)\n            })\n            .catch(error => {\n              console.log('fail')\n              setErrorMessage(`${personObject.name} has already been removed from the server`)\n              setTimeout(() => {\n                setErrorMessage('')\n              }, 5000)\n              setPersons(persons.filter(person => person.id !== id))\n              setNewName('')\n              setNewNumber('')\n            })\n      : setNewName('')\n        setNewNumber('')\n    }\n  }\n \n  const deletePerson = (person) => {\n    const id = person.id\n    console.log('delete', id)\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personService\n      .deletePerson(person.id)\n        .then(() => {\n          console.log(id, persons)\n          const deleted = persons.filter(person => person.id !== id)\n          console.log(deleted)\n          setPersons(deleted)\n          setMessage(`${person.name} deleted from to Phonebook`)\n            setTimeout(() => {\n              setMessage('')\n            }, 5000)\n        })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notifications message={message} errorMessage={errorMessage} />\n      <Filter \n        filter={filter}\n        handleFilterChange={handleFilterChange} \n      />\n      <h2>Add a new person</h2>\n      <Personform \n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        newName={newName}\n        newNumber={newNumber}\n        addPerson={addPerson}\n      />\n      <h2>Numbers</h2>\n      <Persons \n        filter={filter}\n        persons={persons}\n        filteredP={filteredP}\n        deletePerson={deletePerson} \n      />\n    </div>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}